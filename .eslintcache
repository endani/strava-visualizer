[{"/Users/dani/Development/strava-visualizer/src/index.js":"1","/Users/dani/Development/strava-visualizer/src/reducers/index.js":"2","/Users/dani/Development/strava-visualizer/src/apis/axios.js":"3","/Users/dani/Development/strava-visualizer/src/actions/index.js":"4","/Users/dani/Development/strava-visualizer/src/pages/single.js":"5","/Users/dani/Development/strava-visualizer/src/reducers/activitiesReducer.js":"6","/Users/dani/Development/strava-visualizer/src/layouts/dashboard.js":"7","/Users/dani/Development/strava-visualizer/src/App.js":"8","/Users/dani/Development/strava-visualizer/src/pages/dashboard.js":"9","/Users/dani/Development/strava-visualizer/src/layouts/main.js":"10","/Users/dani/Development/strava-visualizer/src/components/sidemenu.js":"11","/Users/dani/Development/strava-visualizer/src/components/Button/button.js":"12","/Users/dani/Development/strava-visualizer/src/pages/index.js":"13","/Users/dani/Development/strava-visualizer/src/components/ActivityCharts/styled.js":"14"},{"size":607,"mtime":1607158166264,"results":"15","hashOfConfig":"16"},{"size":293,"mtime":1606771650066,"results":"17","hashOfConfig":"16"},{"size":78,"mtime":1606334660961,"results":"18","hashOfConfig":"16"},{"size":761,"mtime":1621084729938,"results":"19","hashOfConfig":"16"},{"size":6085,"mtime":1621085190797,"results":"20","hashOfConfig":"16"},{"size":209,"mtime":1606771685709,"results":"21","hashOfConfig":"16"},{"size":455,"mtime":1607096961962,"results":"22","hashOfConfig":"16"},{"size":496,"mtime":1612708277547,"results":"23","hashOfConfig":"16"},{"size":5301,"mtime":1607331067526,"results":"24","hashOfConfig":"16"},{"size":684,"mtime":1607096961963,"results":"25","hashOfConfig":"16"},{"size":5432,"mtime":1607101941353,"results":"26","hashOfConfig":"16"},{"size":483,"mtime":1621085152250,"results":"27","hashOfConfig":"16"},{"size":1884,"mtime":1607096961963,"results":"28","hashOfConfig":"16"},{"size":378,"mtime":1621084906221,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"11ncz27",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/dani/Development/strava-visualizer/src/index.js",[],["62","63","64","65","66"],"/Users/dani/Development/strava-visualizer/src/reducers/index.js",[],"/Users/dani/Development/strava-visualizer/src/apis/axios.js",[],"/Users/dani/Development/strava-visualizer/src/actions/index.js",[],"/Users/dani/Development/strava-visualizer/src/pages/single.js",[],"/Users/dani/Development/strava-visualizer/src/reducers/activitiesReducer.js",[],"/Users/dani/Development/strava-visualizer/src/layouts/dashboard.js",["67"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport SideMenu from '../components/sidemenu';\nimport TopMenu from '../components/topmenu';\n\nconst Dashboard = ({ children }) => (\n  <div className=\"h-screen overflow-hidden flex\">\n    <SideMenu />\n    <div className=\"flex-1 flex flex-col\">\n      {/* <TopMenu /> */}\n      {children}\n    </div>\n  </div>\n);\n\nDashboard.propTypes = {\n  children: PropTypes.object,\n};\n\nexport default Dashboard;\n","/Users/dani/Development/strava-visualizer/src/App.js",[],"/Users/dani/Development/strava-visualizer/src/pages/dashboard.js",["68","69","70","71"],"import React, { useEffect } from 'react';\nimport queryString from 'query-string';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Moment from 'react-moment';\nimport { setToken, getAthlete } from '../actions';\n\nimport DashboardLayout from '../layouts/dashboard';\nimport ActivityMap from '../components/map';\nimport Skeleton from '../components/skeleton';\n\nlet activitiesFetchUrl;\nconst Dashboard = (props) => {\n  const [loading, setLoading] = React.useState(true);\n  const [activities, setActivities] = React.useState([]);\n  const [page, setPage] = React.useState('');\n  const [nextPageUrl, setNextPageUrl] = React.useState('');\n  const [previousPageUrl, setPreviousPageUrl] = React.useState('');\n  const [isFirstPage, setIsFirstPage] = React.useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    const { location } = props;\n    const { search } = location;\n    const params = queryString.parse(search);\n\n    const getToken = async (code) => {\n      await props.setToken(code);\n      await props.getAthlete(props.token.access_token);\n    };\n\n    getToken(params.code);\n    if (page) {\n      activitiesFetchUrl = `https://www.strava.com/api/v3/athlete/activities?per_page=30&page=${page}`;\n      setNextPageUrl(`/activities?page=${Number(page) + 1}`);\n      setIsFirstPage(false);\n\n      if (page >= 2) {\n        setPreviousPageUrl(`/activities?page=${Number(page) - 1}`);\n      } else if (page === 1) {\n        setPreviousPageUrl('/activities');\n        setIsFirstPage(true);\n      }\n    } else {\n      activitiesFetchUrl =\n        'https://www.strava.com/api/v3/athlete/activities?per_page=30&page=1';\n\n      setNextPageUrl(`/activities?page=${2}`);\n      setIsFirstPage(true);\n    }\n\n    fetch(activitiesFetchUrl, {\n      method: 'get',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${props.token.access_token}`,\n      },\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then((json) => {\n        setActivities(json);\n        setLoading(false);\n      });\n  }, [props, page]);\n\n  let renderActivities;\n  if (activities.length > 0) {\n    renderActivities = activities.map((item) => (\n      <Link to={`/dashboard/${item.id}`} key={item.id}>\n        <div className=\"flex flex-col rounded-lg shadow-lg bg-white dark:bg-gray-900 overflow-hidden\">\n          <dl className=\"rounded-lg grid grid-cols-2\">\n            <div className=\"flex flex-col\">\n              <ActivityMap\n                type={item.start_latlng ? 'map' : 'nomap'}\n                polyline={item.map.summary_polyline}\n              />\n            </div>\n            <div className=\"flex-1 p-6 flex flex-col justify-between\">\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-medium text-indigo-600 dark:text-indigo-200\">\n                  {item.type}\n                </p>\n                <p className=\"text-xl font-semibold text-gray-900 dark:text-gray-200\">\n                  {item.name}\n                </p>\n              </div>\n              <div className=\"mt-6 flex items-center\">\n                <div className=\"flex space-x-1 text-sm text-gray-500\">\n                  <time dateTime=\"2020-03-16\">\n                    <Moment\n                      format=\"ddd, Do MMM YYYY\"\n                      date={item.start_date_local}\n                    />\n                  </time>\n                </div>\n              </div>\n            </div>\n          </dl>\n        </div>\n      </Link>\n    ));\n  } else {\n    renderActivities = <h3 className=\"text-white\">No activities found</h3>;\n  }\n\n  const Pagination = () => (\n    <div className=\"mt-5 flex-1 flex justify-between sm:justify-end\">\n      <a className=\"relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n        Previous\n      </a>\n      <a className=\"ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50\">\n        Next\n      </a>\n    </div>\n  );\n\n  return (\n    <DashboardLayout>\n      <main className=\"flex-1 flex-col flex overflow-y-auto focus:outline-none bg-white dark:bg-gray-800\">\n        <div className=\"pt-8 pb-20 px-4 sm:px-6 lg:pt-8 lg:pb-8 lg:px-8\">\n          <div className=\"relative max-w-7xl mx-auto\">\n            <div className=\"relative mt-10 px-4 sm:px-6 lg:pt-8 lg:pb-8 lg:px-8 \">\n              <h2 className=\"text-3xl tracking-tight font-extrabold text-gray-900 dark:text-gray-200 sm:text-4xl\">\n                Latest Activities\n              </h2>\n              <div className=\"mt-12 max-w-xl mx-auto grid gap-5 md:grid-cols-2 lg:grid-cols-2 xl:grid-cols-2 2xl:grid-cols-3 xl:max-w-none\">\n                {!loading ? renderActivities : <Skeleton />}\n              </div>\n              <Pagination />\n            </div>\n          </div>\n        </div>\n      </main>\n    </DashboardLayout>\n  );\n};\n\nDashboard.propTypes = {\n  token: PropTypes.object,\n  location: PropTypes.object,\n  setToken: PropTypes.func,\n  getAthlete: PropTypes.func,\n};\n\nconst mapStateToProps = (state) => ({\n  token: state.token,\n});\n\nexport default connect(mapStateToProps, { setToken, getAthlete })(Dashboard);\n",["72","73","74","75","76"],"/Users/dani/Development/strava-visualizer/src/layouts/main.js",[],"/Users/dani/Development/strava-visualizer/src/components/sidemenu.js",[],"/Users/dani/Development/strava-visualizer/src/components/Button/button.js",[],"/Users/dani/Development/strava-visualizer/src/pages/index.js",[],"/Users/dani/Development/strava-visualizer/src/components/ActivityCharts/styled.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":15},{"ruleId":"87","severity":1,"message":"91","line":18,"column":16,"nodeType":"89","messageId":"90","endLine":18,"endColumn":23},{"ruleId":"87","severity":1,"message":"92","line":19,"column":10,"nodeType":"89","messageId":"90","endLine":19,"endColumn":21},{"ruleId":"87","severity":1,"message":"93","line":20,"column":10,"nodeType":"89","messageId":"90","endLine":20,"endColumn":25},{"ruleId":"87","severity":1,"message":"94","line":21,"column":10,"nodeType":"89","messageId":"90","endLine":21,"endColumn":21},{"ruleId":"77","replacedBy":"95"},{"ruleId":"79","replacedBy":"96"},{"ruleId":"81","replacedBy":"97"},{"ruleId":"83","replacedBy":"98"},{"ruleId":"85","replacedBy":"99"},"lines-around-directive",["100"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'nextPageUrl' is assigned a value but never used.","'previousPageUrl' is assigned a value but never used.","'isFirstPage' is assigned a value but never used.",["100"],[],[],[],[],"padding-line-between-statements"]