[{"/Users/dani/Development/strava-visualizer/src/App.js":"1","/Users/dani/Development/strava-visualizer/src/index.js":"2","/Users/dani/Development/strava-visualizer/src/layouts/main.js":"3","/Users/dani/Development/strava-visualizer/src/reducers/tokenReducer.js":"4","/Users/dani/Development/strava-visualizer/src/reducers/index.js":"5","/Users/dani/Development/strava-visualizer/src/pages/index.js":"6","/Users/dani/Development/strava-visualizer/src/actions/index.js":"7","/Users/dani/Development/strava-visualizer/src/ENV.ts":"8","/Users/dani/Development/strava-visualizer/src/reducers/userReducer.js":"9","/Users/dani/Development/strava-visualizer/src/reducers/activitiesReducer.js":"10","/Users/dani/Development/strava-visualizer/src/layouts/dashboard.js":"11","/Users/dani/Development/strava-visualizer/src/components/sidemenu.js":"12","/Users/dani/Development/strava-visualizer/src/apis/axios.js":"13","/Users/dani/Development/strava-visualizer/src/pages/dashboard.js":"14","/Users/dani/Development/strava-visualizer/src/components/map.js":"15","/Users/dani/Development/strava-visualizer/src/pages/single.js":"16","/Users/dani/Development/strava-visualizer/src/components/activityDetailMap.js":"17","/Users/dani/Development/strava-visualizer/src/components/ActivityDetailMap.js":"18","/Users/dani/Development/strava-visualizer/src/components/button.js":"19","/Users/dani/Development/strava-visualizer/src/components/activityCharts.js":"20","/Users/dani/Development/strava-visualizer/src/components/skeleton.js":"21"},{"size":496,"mtime":1607096961933,"results":"22","hashOfConfig":"23"},{"size":607,"mtime":1607158166264,"results":"24","hashOfConfig":"23"},{"size":684,"mtime":1607096961963,"results":"25","hashOfConfig":"23"},{"size":1019,"mtime":1607157361583,"results":"26","hashOfConfig":"27"},{"size":293,"mtime":1606771650066,"results":"28","hashOfConfig":"29"},{"size":1884,"mtime":1606916665488,"results":"30","hashOfConfig":"27"},{"size":775,"mtime":1607331204968,"results":"31","hashOfConfig":"23"},{"size":123,"mtime":1606418938146,"results":"32","hashOfConfig":"27"},{"size":8983,"mtime":1607100420222,"results":"33","hashOfConfig":"23"},{"size":209,"mtime":1606771685709,"results":"34","hashOfConfig":"23"},{"size":455,"mtime":1607096961962,"results":"35","hashOfConfig":"27"},{"size":5432,"mtime":1607101941353,"results":"36","hashOfConfig":"27"},{"size":78,"mtime":1606334660961,"results":"37","hashOfConfig":"27"},{"size":5301,"mtime":1607331067526,"results":"38","hashOfConfig":"23"},{"size":3885,"mtime":1607160195187,"results":"39","hashOfConfig":"23"},{"size":6063,"mtime":1607180147507,"results":"40","hashOfConfig":"23"},{"size":4237,"mtime":1607160526301,"results":"41","hashOfConfig":"23"},{"size":4367,"mtime":1607094192920,"results":"42","hashOfConfig":"27"},{"size":701,"mtime":1607096961958,"results":"43","hashOfConfig":"23"},{"size":4939,"mtime":1607158830089,"results":"44","hashOfConfig":"23"},{"size":2914,"mtime":1607330850473,"results":"45","hashOfConfig":"23"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11ncz27",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"aherny",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1180s4v",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dani/Development/strava-visualizer/src/App.js",[],"/Users/dani/Development/strava-visualizer/src/index.js",[],"/Users/dani/Development/strava-visualizer/src/layouts/main.js",[],"/Users/dani/Development/strava-visualizer/src/reducers/tokenReducer.js",[],"/Users/dani/Development/strava-visualizer/src/reducers/index.js",[],"/Users/dani/Development/strava-visualizer/src/pages/index.js",[],["93","94","95","96","97"],"/Users/dani/Development/strava-visualizer/src/actions/index.js",[],"/Users/dani/Development/strava-visualizer/src/ENV.ts",[],"/Users/dani/Development/strava-visualizer/src/reducers/userReducer.js",[],"/Users/dani/Development/strava-visualizer/src/reducers/activitiesReducer.js",[],"/Users/dani/Development/strava-visualizer/src/layouts/dashboard.js",["98"],"/Users/dani/Development/strava-visualizer/src/components/sidemenu.js",[],"/Users/dani/Development/strava-visualizer/src/apis/axios.js",[],"/Users/dani/Development/strava-visualizer/src/pages/dashboard.js",["99","100","101","102"],"/Users/dani/Development/strava-visualizer/src/components/map.js",["103"],"import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst googleApiKey = 'AIzaSyAsyxYCjxLqi49yGUuqUJRa4cYN8V4VyLE';\n// Google map style wizard: https://mapstyle.withgoogle.com/\n\nconst Map = styled.div`\n  width: 190px;\n  height: 190px;\n  flex-shrink: 0;\n  background: #74ccef;\n  opacity: 0.5;\n`;\n\nconst MapImageLarge = styled.div`\n  width: 190px;\n  height: 190px;\n`;\n\nconst MapImageSmall = styled.div`\n  width: 50px;\n  height: 50px;\n  display: none;\n  overflow: hidden;\n`;\n\nconst ActivityMap = (props) => {\n  const { mediaDarkMode, polyline, type } = props;\n\n  const pathWeight = 4;\n  const pathColor = '0x3B8BFFff';\n  const mapDimensionSmall = '100x100';\n  const mapDimensionLarge = '380x380';\n  let Style = '';\n\n  if (!mediaDarkMode) {\n    Style =\n      '&format=png&maptype=roadmap&style=element:geometry%7Ccolor:0x212121&style=element:labels.icon%7Cvisibility:off&style=element:labels.text.fill%7Ccolor:0x757575&style=element:labels.text.stroke%7Ccolor:0x212121&style=feature:administrative%7Celement:geometry%7Ccolor:0x757575&style=feature:administrative.country%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&style=feature:administrative.land_parcel%7Celement:labels%7Cvisibility:off&style=feature:administrative.locality%7Celement:labels.text.fill%7Ccolor:0xbdbdbd&style=feature:poi%7Celement:labels.text%7Cvisibility:off&style=feature:poi%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:poi.business%7Cvisibility:off&style=feature:poi.park%7Celement:geometry%7Ccolor:0x181818&style=feature:poi.park%7Celement:labels.text.fill%7Ccolor:0x616161&style=feature:poi.park%7Celement:labels.text.stroke%7Ccolor:0x1b1b1b&style=feature:road%7Celement:geometry.fill%7Ccolor:0x2c2c2c&style=feature:road%7Celement:labels.icon%7Cvisibility:off&style=feature:road%7Celement:labels.text.fill%7Ccolor:0x8a8a8a&style=feature:road.arterial%7Cvisibility:off&style=feature:road.arterial%7Celement:geometry%7Ccolor:0x373737&style=feature:road.highway%7Celement:geometry%7Ccolor:0x3c3c3c&style=feature:road.highway%7Celement:labels%7Cvisibility:off&style=feature:road.highway.controlled_access%7Celement:geometry%7Ccolor:0x4e4e4e&style=feature:road.local%7Cvisibility:off&style=feature:road.local%7Celement:labels%7Cvisibility:off&style=feature:road.local%7Celement:labels.text.fill%7Ccolor:0x616161&style=feature:transit%7Cvisibility:off&style=feature:transit%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:water%7Celement:geometry%7Ccolor:0x000000&style=feature:water%7Celement:labels.text.fill%7Ccolor:0x3d3d3d&size=';\n  } else {\n    Style =\n      '&format=png&maptype=roadmap&style=feature:water%7Celement:geometry.fill%7Ccolor:0x75cff0&size=';\n  }\n\n  const imageUrlSmall = `https://maps.googleapis.com/maps/api/staticmap?key=${googleApiKey}&path=weight:${pathWeight}%7Ccolor:${pathColor}%7Cenc:${polyline}${Style}${mapDimensionSmall}`;\n\n  const imageUrlLarge = `https://maps.googleapis.com/maps/api/staticmap?key=${googleApiKey}&path=weight:${pathWeight}%7Ccolor:${pathColor}%7Cenc:${polyline}${Style}${mapDimensionLarge}`;\n\n  if (type === 'map') {\n    return (\n      <>\n        <MapImageLarge>\n          <img\n            src={imageUrlLarge}\n            style={{\n              width: '100%',\n            }}\n            alt=\"\"\n          />\n        </MapImageLarge>\n        <MapImageSmall>\n          <img src={imageUrlSmall} style={{ width: '100%' }} alt=\"\" />\n        </MapImageSmall>\n      </>\n    );\n  }\n  return (\n    <>\n      <MapImageLarge>\n        <div\n          style={{\n            width: '100%',\n          }}\n          alt=\"\"\n        />\n      </MapImageLarge>\n      <MapImageSmall>\n        <div style={{ width: '100%' }} alt=\"\" />\n      </MapImageSmall>\n    </>\n  );\n};\n\nActivityMap.propTypes = {\n  type: PropTypes.object,\n  polyline: PropTypes.object,\n  mediaDarkMode: PropTypes.bool,\n};\n\nexport default ActivityMap;\n",["104","105","106","107","108"],"/Users/dani/Development/strava-visualizer/src/pages/single.js",[],"/Users/dani/Development/strava-visualizer/src/components/activityDetailMap.js",["109","110","111"],"import React from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport polyline from '@mapbox/polyline';\nimport useMedia from 'use-media';\n\nimport PropTypes from 'prop-types';\n\nconst latLngCircleSize = 10;\nconst latLngCircleOpacity = 1;\nconst style = {\n  top: 0,\n  bottom: 0,\n  width: '100%',\n  position: 'absolute',\n};\n\nconst ActivityDetailMap = (props) => {\n  const mapContainer = React.useRef(null);\n  const [map, setMap] = React.useState(null);\n  const mediaDarkMode = useMedia('(prefers-color-scheme: dark)');\n\n  const decodedPolyline = polyline.toGeoJSON(\n    props.activitySummary.map.polyline\n  );\n  const decodedPolylineCoordinates = decodedPolyline.coordinates;\n\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoicDBwbWFrZXIiLCJhIjoiY2lzOXliOGlrMDA2ODJ5bzJ4YjNnb29qdSJ9.hf19Sca7oYCcR8kRlx07Rw';\n\n  React.useEffect(() => {\n    const { mediaDarkMode } = props;\n    let mapTheme;\n\n    if (!mediaDarkMode) {\n      mapTheme = 'mapbox://styles/mapbox/dark-v10';\n    } else {\n      mapTheme = 'mapbox://styles/p0pmaker/cjrf0kzjd4xde2tqwor6ltd0u';\n    }\n\n    let map;\n\n    const initializeMap = () => {\n      map = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: mapTheme,\n        center: [\n          props.activitySummary.start_latlng[1],\n          props.activitySummary.start_latlng[0],\n        ],\n        zoom: 10,\n      });\n\n      map.on('load', async () => {\n        setMap(map);\n        map.resize();\n\n        map.addLayer({\n          id: 'start',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'Feature',\n              properties: {\n                description: 'Activitiy Start',\n              },\n              geometry: {\n                type: 'Point',\n                coordinates: decodedPolylineCoordinates[0],\n              },\n            },\n          },\n          paint: {\n            'circle-color': '#f03434',\n            'circle-radius': latLngCircleSize,\n            'circle-opacity': latLngCircleOpacity,\n          },\n        });\n\n        map.addLayer({\n          id: 'end',\n          type: 'circle',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'Feature',\n              properties: {\n                description: 'Activitiy End',\n              },\n              geometry: {\n                type: 'Point',\n                coordinates: decodedPolylineCoordinates.pop(),\n              },\n            },\n          },\n          paint: {\n            'circle-color': '#479C1F',\n            'circle-radius': latLngCircleSize,\n            'circle-opacity': latLngCircleOpacity,\n          },\n        });\n\n        map.addLayer({\n          id: 'route',\n          type: 'line',\n          source: {\n            type: 'geojson',\n            data: {\n              type: 'Feature',\n              properties: {},\n              geometry: {\n                type: 'LineString',\n                coordinates: decodedPolylineCoordinates,\n              },\n            },\n          },\n          layout: {\n            'line-join': 'round',\n            'line-cap': 'round',\n          },\n          paint: {\n            'line-color': '#0a67f2',\n            'line-width': 2,\n          },\n        });\n\n        // Geographic coordinates of the LineString\n        const coordinates = decodedPolylineCoordinates;\n        // Pass the first coordinates in the LineString to `lngLatBounds` &\n        // wrap each coordinate pair in `extend` to include them in the bounds\n        // result. A variation of this technique could be applied to zooming\n        // to the bounds of multiple Points or Polygon geomteries - it just\n        // requires wrapping all the coordinates with the extend method.\n\n        const bounds = coordinates.reduce(function (bounds, coord) {\n          return bounds.extend(coord);\n        }, new mapboxgl.LngLatBounds(coordinates[0], coordinates[0]));\n\n        map.fitBounds(bounds, { padding: 80 });\n      });\n    };\n\n    if (!map) initializeMap({ setMap, mapContainer });\n  }, []);\n\n  return <div style={style} ref={(el) => (mapContainer.current = el)} />;\n};\n\nActivityDetailMap.propTypes = {\n  activitySummary: PropTypes.object,\n  mediaDarkMode: PropTypes.bool,\n};\n\nexport default ActivityDetailMap;\n","/Users/dani/Development/strava-visualizer/src/components/ActivityDetailMap.js",["112","113","114"],"/Users/dani/Development/strava-visualizer/src/components/button.js",[],"/Users/dani/Development/strava-visualizer/src/components/activityCharts.js",["115","116","117","118"],"// eslint-disable jsx-props-no-spreading\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  LineChart,\n  AreaChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  Area,\n} from 'recharts';\nimport _ from 'lodash';\nimport useMedia from 'use-media';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst ChartContainer = styled.div`\n  padding: 10;\n  margin: 20 0;\n  width: 100%;\n  position: relative;\n`;\n\nconst displayActivityDistanceUnit = 'km';\n\nconst Tick = ({\n  payload: { value },\n  verticalAnchor,\n  visibleTicksCount,\n  ...rest\n}) => (\n  <text style={{ fontSize: '12px' }} {...rest} dy={16}>\n    {value} {displayActivityDistanceUnit}\n  </text>\n);\n\nTick.propTypes = {\n  payload: PropTypes.object,\n  verticalAnchor: PropTypes.any,\n  visibleTicksCount: PropTypes.any,\n};\n\nconst CustomTooltipStyled = styled.div`\n  background: #1f2937;\n  padding: 10px 20px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);\n  border-radius: 12px;\n\n  p {\n    margin: 0;\n  }\n`;\n\nconst RenderLineChart = (props) => {\n  const mediaDarkMode = useMedia('(prefers-color-scheme: dark)');\n  const originalArray = props.data;\n\n  const [showHeartrate, setShowHeartrate] = React.useState(true);\n\n  const displayActivityDistanceUnit = 'km';\n\n  const displayActivityTotalElevationGainUnit = 'm';\n\n  const displaySpeedUnit = 'kph';\n\n  // distance\n\n  const distance = originalArray.filter((item) =>\n    item.type.includes('distance')\n  );\n  const distanceStream = distance[0].data;\n  const distanceInKm = distanceStream.map((item) => _.round(item / 1000, 2));\n\n  const displayDistance = distanceInKm;\n\n  // Altitude\n  let altitudeStream = [];\n  const altitude = originalArray.filter((item) =>\n    item.type.includes('altitude')\n  );\n  if (altitude.length > 0) {\n    altitudeStream = altitude[0].data;\n  }\n\n  // heartrate\n  let heartrateStream = [];\n  const heartrate = originalArray.filter((item) =>\n    item.type.includes('heartrate')\n  );\n  if (heartrate.length > 0) {\n    heartrateStream = heartrate[0].data;\n  }\n\n  // speed\n  let speedStream = [];\n  const speed = originalArray.filter((item) =>\n    item.type.includes('velocity_smooth')\n  );\n\n  if (speed.length > 0) {\n    speedStream = speed[0].data;\n  }\n\n  // Unit conversion function\n  function toKPH(m) {\n    const toKM = m / 1000;\n    const toKPH = toKM * 60 * 60;\n\n    return _.round(toKPH, 3);\n  }\n\n  const speedKPH = _.map(speedStream, toKPH);\n  const displaySpeed = speedKPH;\n  const formattedData = displayDistance.map((distance, index) => ({\n    distance,\n    altitude: altitudeStream[index],\n    heartrate: heartrateStream[index],\n    speed: displaySpeed[index],\n  }));\n\n  const CustomTooltip = (props) => {\n    const { payload, label, active } = props;\n\n    const items = payload.map((item) => (\n      <p style={{ color: item.stroke }} key={item.name}>\n        {item.name}: {item.value} {item.unit}\n      </p>\n    ));\n\n    if (active) {\n      return (\n        <CustomTooltipStyled>\n          <p style={{ opacity: 0.5 }}>\n            distance: {label} {displayActivityDistanceUnit}\n          </p>\n          {items}\n        </CustomTooltipStyled>\n      );\n    }\n    return <div />;\n  };\n\n  CustomTooltip.propTypes = {\n    payload: PropTypes.any,\n    label: PropTypes.any,\n    active: PropTypes.bool,\n  };\n\n  return (\n    <ChartContainer>\n      <ResponsiveContainer width=\"99%\" height={200}>\n        <ComposedChart data={formattedData}>\n          <Tooltip content={<CustomTooltip />} />\n          <CartesianGrid />\n          <XAxis\n            tick={<Tick />}\n            type=\"number\"\n            domain={[0, 'dataMax']}\n            interval=\"Number\"\n            allowDecimals\n            dataKey=\"distance\"\n            minTickGap={20}\n          />\n          <YAxis\n            tick={<Tick />}\n            minTickGap={30}\n            type=\"number\"\n            dataKey=\"altitude\"\n            orientation=\"right\"\n            hide\n          />\n\n          <Area\n            type=\"monotone\"\n            dataKey=\"altitude\"\n            stroke={mediaDarkMode ? '#fff' : '#000'}\n            unit={displayActivityTotalElevationGainUnit}\n            strokeWidth={0}\n            dot={false}\n            fill={mediaDarkMode ? '#fff' : '#000'}\n            fillOpacity={0.2}\n          />\n          {showHeartrate ? (\n            <Line\n              type=\"monotone\"\n              dataKey=\"heartrate\"\n              unit=\"bpm\"\n              stroke=\"#DC524D\"\n              strokeWidth={1}\n              dot={false}\n            />\n          ) : null}\n\n          <Line\n            type=\"monotone\"\n            dataKey=\"speed\"\n            unit={displaySpeedUnit}\n            stroke=\"#0085FF\"\n            strokeWidth={1}\n            // yAxisId=\"left\"\n            dot={false}\n          />\n        </ComposedChart>\n      </ResponsiveContainer>\n    </ChartContainer>\n  );\n};\n\nRenderLineChart.propTypes = {\n  data: PropTypes.any,\n};\n\nexport default RenderLineChart;\n","/Users/dani/Development/strava-visualizer/src/components/skeleton.js",["119","120"],{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":8,"nodeType":"133","messageId":"134","endLine":4,"endColumn":15},{"ruleId":"131","severity":1,"message":"135","line":18,"column":16,"nodeType":"133","messageId":"134","endLine":18,"endColumn":23},{"ruleId":"131","severity":1,"message":"136","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":21},{"ruleId":"131","severity":1,"message":"137","line":20,"column":10,"nodeType":"133","messageId":"134","endLine":20,"endColumn":25},{"ruleId":"131","severity":1,"message":"138","line":21,"column":10,"nodeType":"133","messageId":"134","endLine":21,"endColumn":21},{"ruleId":"131","severity":1,"message":"139","line":8,"column":7,"nodeType":"133","messageId":"134","endLine":8,"endColumn":10},{"ruleId":"121","replacedBy":"140"},{"ruleId":"123","replacedBy":"141"},{"ruleId":"125","replacedBy":"142"},{"ruleId":"127","replacedBy":"143"},{"ruleId":"129","replacedBy":"144"},{"ruleId":"131","severity":1,"message":"145","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":13},{"ruleId":"131","severity":1,"message":"146","line":20,"column":9,"nodeType":"133","messageId":"134","endLine":20,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":144,"column":6,"nodeType":"149","endLine":144,"endColumn":8,"suggestions":"150"},{"ruleId":"131","severity":1,"message":"145","line":19,"column":10,"nodeType":"133","messageId":"134","endLine":19,"endColumn":13},{"ruleId":"131","severity":1,"message":"146","line":20,"column":9,"nodeType":"133","messageId":"134","endLine":20,"endColumn":22},{"ruleId":"147","severity":1,"message":"148","line":149,"column":6,"nodeType":"149","endLine":149,"endColumn":8,"suggestions":"151"},{"ruleId":"131","severity":1,"message":"152","line":5,"column":3,"nodeType":"133","messageId":"134","endLine":5,"endColumn":12},{"ruleId":"131","severity":1,"message":"153","line":6,"column":3,"nodeType":"133","messageId":"134","endLine":6,"endColumn":12},{"ruleId":"131","severity":1,"message":"154","line":12,"column":3,"nodeType":"133","messageId":"134","endLine":12,"endColumn":9},{"ruleId":"131","severity":1,"message":"155","line":62,"column":25,"nodeType":"133","messageId":"134","endLine":62,"endColumn":41},{"ruleId":"131","severity":1,"message":"156","line":36,"column":7,"nodeType":"133","messageId":"134","endLine":36,"endColumn":25},{"ruleId":"131","severity":1,"message":"157","line":40,"column":19,"nodeType":"133","messageId":"134","endLine":40,"endColumn":24},"lines-around-directive",["158"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-unused-vars","'TopMenu' is defined but never used.","Identifier","unusedVar","'setPage' is assigned a value but never used.","'nextPageUrl' is assigned a value but never used.","'previousPageUrl' is assigned a value but never used.","'isFirstPage' is assigned a value but never used.","'Map' is assigned a value but never used.",["158"],[],[],[],[],"'map' is assigned a value but never used.","'mediaDarkMode' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'decodedPolylineCoordinates' and 'props'. Either include them or remove the dependency array.","ArrayExpression",["159"],["160"],"'LineChart' is defined but never used.","'AreaChart' is defined but never used.","'Legend' is defined but never used.","'setShowHeartrate' is assigned a value but never used.","'SkeletonTransition' is assigned a value but never used.","'props' is defined but never used. Allowed unused args must match /res|next|^err/u.","padding-line-between-statements",{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},"Update the dependencies array to be: [decodedPolylineCoordinates, props]",{"range":"164","text":"165"},{"range":"166","text":"165"},[4013,4015],"[decodedPolylineCoordinates, props]",[4171,4173]]